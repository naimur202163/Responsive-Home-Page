/* colors */

:root {
  --dark-color: #2b2d42;
  --light-color: #fefefe;
  --red-color: #d80032;
  --cyan-color: #41ead4;

  --red-hover-color: #be0732;
  --cyan-hover-color: #6af3e1;
}

* {
  margin: 0;
  box-sizing: border-box;
}

body {
  font-family: "Roboto", sans-serif;
}

.wrapper {
  width: 1152px;
  margin: 0 auto;
  padding: 0 100px;
}

/* Header -Navigation */

.desktop-nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: var(--light-color);
  box-shadow: 0px 3px 11px rgba(0, 0, 0, 0.1);
  border-radius: 24px;
  padding: 2px 30px;
  padding-right: 0;

  position: fixed;
  z-index: 200;
  width: calc(1152px - 200px);
  top: 28px;
}

.desktop-nav .menu-items {
  display: flex;
  list-style: none;
}

.desktop-nav .menu-items li {
  margin: 0 20px;
}
/* Last Child */
/* .desktop-nav .menu-items li:last-child {
  margin: 0;
} */

.desktop-nav .menu-items li:nth-last-of-type(1) {
  margin-right: 0;
}

.desktop-nav .menu-items li a {
  text-decoration: none;
  color: var(--dark-color);
  font-size: 16px;
  font-weight: bold;
  position: relative;
}

.desktop-nav .menu-items li a.active::after {
  content: "";
  position: absolute;
  height: 3px;
  width: 100%;
  left: 0;
  bottom: -14px;
  background-color: var(--red-color);
}

.desktop-nav .menu-items li a.btn {
  color: var(--light-color);
  padding: 14px 30px;
  border-radius: 24px;
}

a.btn {
  background: var(--red-color);
  color: var(--light-color);
  text-decoration: none;
  border-radius: 24px;
  padding: 14px 30px;
  font-weight: bold;
  transition: background-color 400ms;
}
a.btn.cyan {
  background: var(--cyan-color);
  color: var(--dark-color);
  font-weight: bold;
}
a.btn:hover {
  background-color: var(--red-hover-color);
}
a.btn.cyan:hover {
  background-color: var(--cyan-hover-color);
}
/* Hero -Container */

.hero-container {
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: space-between;
  /* position: relative; */
}
.hero-container .left {
  flex: 1;
}
.hero-container .left h1 {
  font-family: "Montserrat", sans-serif;
  font-size: 36px;
  margin: 8px 0 28px 0;
}

.hero-container .left .gt {
  color: var(--red-color);
}

.hero-container .left .btn {
  margin-right: 20px;
}
.hero-container .right p {
  padding-right: 30px;
}
.hero-container .left p {
  font-size: 24px;
}

/* Hero Polygon */

.hero-bg {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: -1;
}

.hero-container .polygon {
  position: absolute;
  z-index: -1;
  top: 100px;
  left: 240px;
}
.hero-container .polygon2 {
  position: absolute;
  z-index: -1;
  top: 180px;
  left: 480px;
}

.hero-container .polygon3 {
  position: absolute;
  z-index: -1;
  top: 300px;
  left: 540px;
}

/* Header Animation */
.desktop-nav {
  animation: fadeDown 1000ms forwards;
  opacity: 0;
}

@keyframes fadeDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.hero-container .left p {
  animation: fadeIn 800ms forwards;
  opacity: 0;
  animation-delay: 400ms;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

.hero-container .left h1 {
  animation: fadeToRight 800ms forwards cubic-bezier(0.22, 0.32, 0, 1.54);
  opacity: 0;
  animation-delay: 800ms;
}

@keyframes fadeToRight {
  from {
    opacity: 0;
    transform: translateX(-100px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.hero-container .left .btn:nth-of-type(1) {
  animation: fadeIn 1000ms forwards;
  opacity: 0;
  animation-delay: 1400ms;
}

.hero-container .left .btn:nth-of-type(2) {
  animation: fadeIn 1000ms forwards;
  opacity: 0;
  animation-delay: 1600ms;
}

.hero-container .right {
  animation: fadeToLeft 1200ms forwards;
  opacity: 0;
  animation-delay: 900ms;
}

@keyframes fadeToLeft {
  from {
    transform: translateX(30px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.hero-container .polygon,
.hero-container .polygon2,
.hero-container .polygon3 {
  opacity: 0;
  animation-name: fadeIn, rotate;
  animation-duration: 800ms, 80s;
  animation-delay: 1800ms;
  animation-iteration-count: 1, infinite;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in, linear;
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
